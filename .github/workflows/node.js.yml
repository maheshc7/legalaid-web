# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Build and Test

on:
  pull_request:

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: [18.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install dependencies
      run: npm install

    - name: Build and test
      run: npm run build
      env:
        CI: true

    - if: ${{ matrix.node-version == '18.x' }}
      name: Get Coverage for badge
      run: |
        # var SUMMARY = [
        #   '',
        #   '=============================== Coverage summary ===============================',
        #   'Statements   : 32.5% ( 39/120 )',
        #   'Branches     : 38.89% ( 21/54 )',
        #   'Functions    : 21.74% ( 5/23 )',
        #   'Lines        : 31.93% ( 38/119 )',
        #   '================================================================================',
        #   ''
        # ];
        # SUMMARY = SUMMARY.split('\n')[5]; // 'Lines        : 31.93% ( 38/119 )'
        # SUMMARY = SUMMARY.split(':')[1].split('(')[0].trim(); // '31.93%'
        SUMMARY="$(npm test -- --coverageReporters='text-summary' | tail -2 | head -1)"
        TOKENS=($SUMMARY)
        if [ -z "${TOKENS[2]}" ]; then
          COVERAGE="0%"
        else
          COVERAGE="${TOKENS[2]}"
        fi
        echo "COVERAGE=$COVERAGE" >> $GITHUB_ENV
        REF=${{ github.ref }}
        IFS='/' read -ra PATHS <<< "$REF"
        BRANCH_NAME="${PATHS[1]}_${PATHS[2]}"
        echo $BRANCH_NAME
        echo "BRANCH=$(echo ${BRANCH_NAME})" >> $GITHUB_ENV

    - if: ${{ matrix.node-version == '18.x' }}
      name: Calculate Coverage
      run: |
        COVERAGE="$(npm test -- --coverageReporters='text-summary' | tail -2 | head -1)"
        TOKENS=($COVERAGE)
        if [ -z "${TOKENS[2]}" ]; then
          COVERAGE="0%"
        fi
        echo "COVERAGE=$COVERAGE" >> $GITHUB_ENV

    - if: ${{ matrix.node-version == '18.x' }}
      name: Create the Badge
      uses: schneegans/dynamic-badges-action@v1.0.0
      with:
        auth: ${{ secrets.GIST_SECRET }}
        gistID: cdc60bed264cf5afd17e322cee8feee2
        filename: legalaid-web__${{ env.BRANCH }}.json
        label: Test Coverage
        message: ${{ env.COVERAGE }}  # Set to 0% if COVERAGE is empty
        color: green
        namedLogo: jest
